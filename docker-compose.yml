version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file: [.env]
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALG: ${JWT_ALG}
      ACCESS_TTL_MIN: ${ACCESS_TTL_MIN}
      REFRESH_TTL_DAYS: ${REFRESH_TTL_DAYS}
    ports: ["8000:8000"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app

  ui:
    platform: linux/amd64
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      VITE_API_BASE: http://localhost:8000
    ports: ["5173:5173"]
    depends_on: [api]
    volumes:
      # mount source code where the Dockerfile expects it
      - ./frontend:/repo/frontend:delegated
      # keep node_modules inside the container (not from the host)
      - /repo/frontend/node_modules


  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    env_file: [.env]
    volumes:
      - ./worker:/worker

volumes:
  pgdata:

